<?xml version="1.0" encoding="utf-8"?>
<FDL version="2.1">
  <Form id="loginForm" width="390" height="490" titletext="New Form" borderRadius="10px" onkeyup="enter">
    <Layouts>
      <Layout height="720" mobileorientation="landscape" width="1280">
        <ImageViewer id="ImageViewer00" taborder="2" left="0" top="0" width="390" height="490" image="url('..\..\..\..\..\..\Downloads\0628치과\thumb_d_1174C8BDD2F59CCB55AEA36F4B30F24B.jpg')" stretch="fit" borderRadius="10px" onclick="ImageViewer00_onclick"/>
        <Button id="btn_login" taborder="0" text="로그인" left="121" top="323" width="148" height="37" onclick="btn_login_onclick"/>
        <Static id="Static00" taborder="1" text="Account" left="83" top="15" width="224" height="99" color="black" font="28px/normal &quot;Arial&quot;,&quot;Malgun Gothic&quot;,&quot;Gulim&quot;" textAlign="center"/>
        <Edit id="ed_id" taborder="3" left="77" top="180" width="236" height="43" displaynulltext="아이디를 입력해주세요" textAlign="center" value="admin" text="admin"/>
        <Edit id="ed_pw" taborder="4" left="77" top="240" width="236" height="43" displaynulltext="패스워드 입력해주세요" textAlign="center" value="admin" text="admin" visible="true" password="true"/>
      </Layout>
    </Layouts>
    <Script type="xscript5.1"><![CDATA[include "scripts::commonDate.xjs";
include "scripts::commonOpen.xjs";
application = nexacro.getApplication();

this.btn_login_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	trace("@@@@btn_login_onclick@@@@");
	var empCode = this.ed_id.value;
	var userPw = this.ed_pw.value;
	var today = this.gfn_today(); // 2021-01-01
	
	trace("@@@@@@"+empCode+"  "+userPw+"  "+today);
	trace("로그인");
	
	var id = "login";
	var url = "svcBase::login"
	var resData = "";
	var reqData = "gds_emp=gds_emp gds_period=gds_period";
	var args = "today='"+today+"' empCode='"+empCode+"' userPw='"+userPw+"'";
	var callback = "callback";
	
	if(empCode && userPw){
		this.transaction(id, url, resData, reqData, args, callback, false);
	}else if(empCode==""){
		this.alert("아이디를 입력해주세요.");
	}else{
		this.alert("비밀번호를 입력해주세요.");
	}

};
this.afterLoginSetting = function(){
		var code = application.gds_emp.getColumn(0, "EMP_CODE");
		var name = application.gds_emp.getColumn(0, "EMP_NAME");
		var position = application.gds_emp.getColumn(0, "POSITION_NAME");
		var deptCode = application.gds_emp.getColumn(0, "DEPT_CODE");
		// 현재 기수번호 구함
		var index = application.gds_period.getRowCount()-1;
		var current_periodNo = application.gds_period.getColumn(index, "ACCOUNT_PERIOD_NO");
		
		// 글로벌변수 세팅 
		application.gv_empCode = code;
		application.gv_empName = name;
		application.gv_deptCode = deptCode;
		application.gv_currentPeriod = current_periodNo;
		this.alert(name + " " + position + "님 접속을 환영합니다!");
		
		// 모든 메뉴를 가져온다.
		var id = "getMenuList";
		var url = "svcBase::findMenuList";
		var resData = "";
		var reqData = "gds_menu=gds_menu";
		var args = "";
		var callback = "callback";
	
		application.transaction(id,  url, resData, reqData, args, callback, false); 
	
		// 메뉴 권한 목록 가져온다
		this.gfn_loginAuthority(code);
		application.gv_authorityCode = application.gds_loginAuthority.getColumn(0, "AUTHORITY_LEVEL");
		
		// 로그인한 user정보 세팅
		var index = application.gds_open.addRow();
		application.gds_open.setColumn(index, "CODE", position); // 직책 
		application.gds_open.setColumn(index, "NAME", name);		
		this.gfn_open("Base::MainPage.xfdl", "MainPage", "mainForm");
		application.mainframe.set_visible(true);				
		
			
		this.close();
		
		
	
}
// 권한 메뉴 목록 함수
this.gfn_loginAuthority = function(empCode){
		trace("@@@@gfn_loginAuthority@@@@");
		var id = "findLoginAuthorityList";
		var url = "svcOperate::loginAuthority";
		var resData = "";
		var reqData = "gds_loginAuthority=gds_loginAuthority";
		var args = "empCode='"+empCode+"'";
		var callback = "callback";
		
		application.transaction(id, url, resData, reqData, args, callback, false);
		
		
}

//콜백
this.callback = function(strSvcID, nErrorCode, strErrorMsg){
	//alert("callback함수");
	
	
	trace("nErrorCode  :" + nErrorCode);
	trace("strErrorMsg  :" + strErrorMsg);
	if(strSvcID=="login"){
		if(nErrorCode < 0){
			alert("아이디나 비밀번호를 확인해주세요. "+strErrorMsg);
		}else{
			//alert("로그인성공")
			this.afterLoginSetting();
		}
	}
	

	

}
// this.callback1 = function(strSvcID, nErrorCode, strErrorMsg){
// 	if(strSvcID=="getMenuList"){
// 		alert("메뉴조회완료")
// 	}
// }
// this.callback2 = function(strSvcID, nErrorCode, strErrorMsg){
// 		if(strSvcID=="findLoginAuthorityList"){
// 		alert("권한조회완료")
// 
// 	}
// }
this.enter = function(obj:nexacro.Form,e:nexacro.KeyEventInfo)
{
	trace(e.keycode);
	if(e.keycode == 13){
		this.btn_login.click();
	}
};
]]></Script>
  </Form>
</FDL>
